{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from \"../components/Layout\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nexport default function Info(props) {\n  var frontmatter = props.data;\n  var markdownBody = props.content;\n  return __jsx(Layout, {\n    pathname: \"info\",\n    bgColor: frontmatter.background_color,\n    siteTitle: props.title\n  }, __jsx(\"section\", {\n    className: \"jsx-879415925\" + \" \" + \"info_blurb\"\n  }, __jsx(ReactMarkdown, {\n    source: markdownBody\n  })), __jsx(_JSXStyle, {\n    id: \"879415925\"\n  }, [\".info_blurb.jsx-879415925{max-width:800px;padding:1.5rem 1.25rem;}\", \"@media (min-width:768px){.info_blurb.jsx-879415925{padding:2rem;}}\", \"@media (min-width:1440px){.info_blurb.jsx-879415925{padding:3rem;}}\"]));\n}\nInfo.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var content, config, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return import(\"../data/info.md\");\n\n        case 2:\n          content = _context.sent;\n          _context.next = 5;\n          return import(\"../data/config.json\");\n\n        case 5:\n          config = _context.sent;\n          data = matter(content[\"default\"]);\n          return _context.abrupt(\"return\", _objectSpread({\n            title: config.title\n          }, data));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));","map":null,"metadata":{},"sourceType":"module"}