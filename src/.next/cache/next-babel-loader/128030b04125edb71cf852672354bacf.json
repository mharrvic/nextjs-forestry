{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout\";\nimport matter from \"gray-matter\";\nimport ReactMarkdown from \"react-markdown\";\nexport default function Info(props) {\n  const frontmatter = props.data;\n  const markdownBody = props.content;\n  return __jsx(Layout, {\n    pathname: \"info\",\n    bgColor: frontmatter.background_color,\n    siteTitle: props.title\n  }, __jsx(\"section\", {\n    className: \"jsx-879415925\" + \" \" + \"info_blurb\"\n  }, __jsx(ReactMarkdown, {\n    source: markdownBody\n  })), __jsx(_JSXStyle, {\n    id: \"879415925\"\n  }, [\".info_blurb.jsx-879415925{max-width:800px;padding:1.5rem 1.25rem;}\", \"@media (min-width:768px){.info_blurb.jsx-879415925{padding:2rem;}}\", \"@media (min-width:1440px){.info_blurb.jsx-879415925{padding:3rem;}}\"]));\n}\n\nInfo.getInitialProps = async function () {\n  const content = await import(`../data/info.md`);\n  const config = await import(`../data/config.json`);\n  const data = matter(content.default);\n  return _objectSpread({\n    title: config.title\n  }, data);\n};","map":null,"metadata":{},"sourceType":"module"}